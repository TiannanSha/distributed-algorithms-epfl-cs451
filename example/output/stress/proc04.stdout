My PID: 44970

From a new terminal type `kill -SIGINT 44970` or `kill -SIGTERM 44970` to stop processing packets

My ID: 4

List of resolved hosts is:
==========================
1
Human-readable IP: 127.0.0.1
Human-readable Port: 11001

2
Human-readable IP: 127.0.0.1
Human-readable Port: 11002

3
Human-readable IP: 127.0.0.1
Human-readable Port: 11003

4
Human-readable IP: 127.0.0.1
Human-readable Port: 11004


Path to output:
===============
/Users/sha/Desktop/EPFL/2022-2023fall/distributed-algorithms/CS451-2022-project/example/output/stress/proc04.output

Path to config:
===============
../example/output/stress/config

Doing some initialization

broadcastAllMsgs()

broadcast Msgs()

$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[]
$$$submitloop before sendQueue.take()
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=1, relayedBy=4, plPktId=1}
sendQueue: []
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}]
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=1, relayedBy=4, plPktId=1}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=1, relayedBy=4, plPktId=1}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[1]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=1, relayedBy=4, plPktId=1}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=1, relayedBy=4, plPktId=1}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
append to log with entry: b 1

append to log with entry: b 2

append to log with entry: b 3

append to log with entry: b 4

append to log with entry: b 5

append to log with entry: b 6

append to log with entry: b 7

append to log with entry: b 8

packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}]
append to log with entry: b 9

append to log with entry: b 10

append to log with entry: b 11

append to log with entry: b 12

append to log with entry: b 13

append to log with entry: b 14

append to log with entry: b 15

append to log with entry: b 16

packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}]
append to log with entry: b 17

append to log with entry: b 18

append to log with entry: b 19

append to log with entry: b 20

append to log with entry: b 21

append to log with entry: b 22

append to log with entry: b 23

append to log with entry: b 24

packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}]
append to log with entry: b 25

append to log with entry: b 26

append to log with entry: b 27

append to log with entry: b 28

append to log with entry: b 29

append to log with entry: b 30

broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=1}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=1}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[1]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[2]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=2, relayedBy=4, plPktId=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=2}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=2}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[2]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}]
info: creating ACK packet
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 1, packet.pktId = 1
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
rebroadcast pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 2, packet.pktId = 1
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
rebroadcast pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 4]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=1, relayedBy=4, plPktId=4}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=4}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=4}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 4]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 5]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=2, relayedBy=4, plPktId=5}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=5}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=5}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 5]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 1, packet.pktId = 2
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
rebroadcast pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}
sendQueue: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}
sendQueue: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
sendQueue: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}]
send to addr:/127.0.0.1, port:11003
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 7]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=1, relayedBy=4, plPktId=7}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=7}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=7}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 7]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 2, packet.pktId = 2
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
rebroadcast pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}
sendQueue: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}
sendQueue: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
sendQueue: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}]
send to addr:/127.0.0.1, port:11003
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 8]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=2, relayedBy=4, plPktId=8}
in fairloss link send()
$$$submitloop  after submit an task
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=8}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=8}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 8]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}]
$$$submitloop before sendQueue.take()
fair loss link deliver() after socket.receive()
send to addr:/127.0.0.1, port:11003
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 1, packet.pktId = 3
fairloss link after send ACK
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
beb deliver after beb deliver Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
rebroadcast pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}
sendQueue: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9]}}
sendQueue: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
sendQueue: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
$$$submitloop  after submit an task
send to addr:/127.0.0.1, port:11003
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 10]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=1, relayedBy=4, plPktId=10}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=10}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=1, relayedBy=4, plPktId=10}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 10]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 2, packet.pktId = 3
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
rebroadcast pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}
sendQueue: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}
sendQueue: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
sendQueue: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 11]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=2, relayedBy=4, plPktId=11}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=11}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=4, dst=2, relayedBy=4, plPktId=11}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 11]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 1, packet.pktId = 4
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
$$$submitloop in sendingLoop
rebroadcast pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 12]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
$$$submitloop  after submit an task
sendQueue: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 12, 13]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=4, plPktId=13}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=13}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=13}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 12, 13]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 2, packet.pktId = 4
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
rebroadcast pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 12, 14]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=4, plPktId=14}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=14}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=14}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 12, 14]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
$$$submitloop in sendingLoop
packet.src = 3, packet.pktId = 1
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
rebroadcast pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[3, 6, 9, 12, 15]}}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
$$$submitloop  after submit an task
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}]
packet.dst:2
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}]
packet.dst:3
send to addr:/127.0.0.1, port:11003
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
$$$submitloop in sendingLoop
send to addr:/127.0.0.1, port:11003
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[16, 3, 6, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=4, plPktId=16}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=16}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=16}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[16, 3, 6, 9, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=4, relayedBy=2, plPktId=15}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 4, packet.pktId = 1
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=4, relayedBy=2, plPktId=15}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
in urb deliver res: []
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[17, 3, 6, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=2, relayedBy=4, plPktId=17}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=17}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=17}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[17, 3, 6, 9, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 6, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=4, relayedBy=1, plPktId=18}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 4, packet.pktId = 1
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=4, relayedBy=1, plPktId=18}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
in urb deliver res: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 4 1

d 4 2

d 4 3

d 4 4

d 4 5

d 4 6

d 4 7

d 4 8

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
send to addr:/127.0.0.1, port:11003
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 19, 6, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=4, plPktId=19}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=19}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=19}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 19, 6, 9, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=2, plPktId=18}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 1, packet.pktId = 1
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=2, plPktId=18}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[1]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 1 1

d 1 2

d 1 3

d 1 4

d 1 5

d 1 6

d 1 7

d 1 8

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 20, 6, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=4, plPktId=20}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=20}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=20}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 20, 6, 9, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=1, plPktId=21}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 2, packet.pktId = 1
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=1, plPktId=21}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1], 2=[], 3=[], 4=[1]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 2 1

d 2 2

d 2 3

d 2 4

d 2 5

d 2 6

d 2 7

d 2 8

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
send to addr:/127.0.0.1, port:11003
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 22, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=4, plPktId=22}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=22}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=22}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 22, 9, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=2, plPktId=21}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 1, packet.pktId = 2
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=2, plPktId=21}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1], 2=[1], 3=[], 4=[1]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 1 9

d 1 10

d 1 11

d 1 12

d 1 13

d 1 14

d 1 15

d 1 16

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 23, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=2, relayedBy=4, plPktId=23}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=23}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=23}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 23, 9, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=4, relayedBy=1, plPktId=24}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 4, packet.pktId = 2
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=4, relayedBy=1, plPktId=24}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2], 2=[1], 3=[], 4=[1]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: []
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 25, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=1, relayedBy=4, plPktId=25}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=25}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=25}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 25, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=4, relayedBy=2, plPktId=24}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 4, packet.pktId = 2
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=4, relayedBy=2, plPktId=24}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2], 2=[1], 3=[], 4=[1]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 4 9

d 4 10

d 4 11

d 4 12

d 4 13

d 4 14

d 4 15

d 4 16

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 26, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=2, relayedBy=4, plPktId=26}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=26}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=26}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 26, 12, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=1, plPktId=27}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 2, packet.pktId = 2
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=1, plPktId=27}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2], 2=[1], 3=[], 4=[1, 2]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 2 9

d 2 10

d 2 11

d 2 12

d 2 13

d 2 14

d 2 15

d 2 16

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
$$$submitloop in sendingLoop
send to addr:/127.0.0.1, port:11003
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 28, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=1, relayedBy=4, plPktId=28}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=28}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=28}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 28, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=2, plPktId=27}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 1, packet.pktId = 3
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=2, plPktId=27}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2], 2=[1, 2], 3=[], 4=[1, 2]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 1 17

d 1 18

d 1 19

d 1 20

d 1 21

d 1 22

d 1 23

d 1 24

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 29, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=2, relayedBy=4, plPktId=29}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=29}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=3, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=29}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 29, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 30, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=4, relayedBy=1, plPktId=30}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 4, packet.pktId = 3
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=4, relayedBy=1, plPktId=30}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2, 3], 2=[1, 2], 3=[], 4=[1, 2]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: []
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 30, 15, 31]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=1, relayedBy=4, plPktId=31}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=31}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=4, plPktId=31}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[18, 3, 21, 6, 24, 9, 27, 12, 30, 15, 31]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=4, relayedBy=2, plPktId=30}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 4, packet.pktId = 3
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=4, relayedBy=2, plPktId=30}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2, 3], 2=[1, 2], 3=[], 4=[1, 2]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 4 17

d 4 18

d 4 19

d 4 20

d 4 21

d 4 22

d 4 23

d 4 24

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[32, 18, 3, 21, 6, 24, 9, 27, 12, 30, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=2, relayedBy=4, plPktId=32}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=32}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=2, relayedBy=4, plPktId=32}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[32, 18, 3, 21, 6, 24, 9, 27, 12, 30, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 18, 3, 21, 6, 24, 9, 27, 12, 30, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=1, plPktId=33}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 2, packet.pktId = 3
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=1, plPktId=33}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2, 3], 2=[1, 2], 3=[], 4=[1, 2, 3]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 2 17

d 2 18

d 2 19

d 2 20

d 2 21

d 2 22

d 2 23

d 2 24

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 18, 34, 3, 21, 6, 24, 9, 27, 12, 30, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=1, relayedBy=4, plPktId=34}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=34}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=4, plPktId=34}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 18, 34, 3, 21, 6, 24, 9, 27, 12, 30, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=2, plPktId=33}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 1, packet.pktId = 4
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=2, plPktId=33}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2, 3], 2=[1, 2, 3], 3=[], 4=[1, 2, 3]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 1 25

d 1 26

d 1 27

d 1 28

d 1 29

d 1 30

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 18, 3, 35, 21, 6, 24, 9, 27, 12, 30, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=2, relayedBy=4, plPktId=35}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=35}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=4, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=2, relayedBy=4, plPktId=35}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 18, 3, 35, 21, 6, 24, 9, 27, 12, 30, 15]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 18, 3, 36, 21, 6, 24, 9, 27, 12, 30, 15]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=4, relayedBy=1, plPktId=36}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 4, packet.pktId = 4
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=4, relayedBy=1, plPktId=36}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2, 3, 4], 2=[1, 2, 3], 3=[], 4=[1, 2, 3]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: []
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 3, 36, 37, 6, 9, 12, 15, 18, 21, 24, 27, 30]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=4, plPktId=37}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=3, dst=1, relayedBy=4, plPktId=37}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=3, dst=1, relayedBy=4, plPktId=37}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 3, 36, 37, 6, 9, 12, 15, 18, 21, 24, 27, 30]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=4, relayedBy=2, plPktId=36}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11002
packet.src = 4, packet.pktId = 4
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=4, relayedBy=2, plPktId=36}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2, 3, 4], 2=[1, 2, 3], 3=[], 4=[1, 2, 3]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 4 25

d 4 26

d 4 27

d 4 28

d 4 29

d 4 30

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 3, 36, 6, 38, 9, 12, 15, 18, 21, 24, 27, 30]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=4, plPktId=38}
in fairloss link send()
send to addr:/127.0.0.1, port:11002
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=3, dst=2, relayedBy=4, plPktId=38}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=3, dst=2, relayedBy=4, plPktId=38}
pendingPlPktIds NodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 3, 36, 6, 38, 9, 12, 15, 18, 21, 24, 27, 30]}}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=3, relayedBy=4, plPktId=3}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=3, relayedBy=4, plPktId=9}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=3, relayedBy=4, plPktId=12}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=4, plPktId=15}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=4, plPktId=18}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=4, plPktId=21}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=4, plPktId=24}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=3, relayedBy=4, plPktId=27}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=3, relayedBy=4, plPktId=30}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=3, relayedBy=4, plPktId=33}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=3, relayedBy=4, plPktId=36}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[], 3=[], 4=[33, 3, 36, 6, 39, 9, 12, 15, 18, 21, 24, 27, 30]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}
$$$submitloop  after submit an task
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=4, plPktId=39}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=1, plPktId=39}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 2, packet.pktId = 4
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=1, plPktId=39}
*** pending: NodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
*** ACKAcks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}}}
@@@in get deliverable packets
@@@pendingNodeIdToPackets{nodeIdToPackets={1=[Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}], 2=[Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}, Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}], 3=[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}], 4=[Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}]}}
@@@acks:Acks{acks={1={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 2={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}, 3={1=[1, 4]}, 4={1=[1, 2, 4], 2=[1, 2, 4], 3=[1, 2, 4], 4=[1, 2, 4]}}}
@@@deliveredNodeIDToPktIDs{nodeIdToPktIds={1=[1, 2, 3, 4], 2=[1, 2, 3], 3=[], 4=[1, 2, 3, 4]}}
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=1, dst=4, relayedBy=1, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=4, relayedBy=1, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=1, dst=4, relayedBy=1, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=1, dst=4, relayedBy=1, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@added to result
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=4, relayedBy=2, plPktId=3}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=2, dst=4, relayedBy=2, plPktId=9}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=2, dst=4, relayedBy=2, plPktId=6}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=4, relayedBy=1, plPktId=15}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):false
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))true
@@@pkt: Packet{dataLen=32, pktId=3, numMsgs=8, firstMsgId=17, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
@@@pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=4, dst=-1, relayedBy=4, plPktId=0}
@@@acks.ackedByMajority(pkt.getSrc(), pkt.getPktId()):true
@@@!delivered.alreadyContainsPacket(pkt.getSrc(), pkt.getPktId()))false
in urb deliver res: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}]
fifo deliver after urb deliver, pkts from urb: [Packet{dataLen=32, pktId=4, numMsgs=6, firstMsgId=25, isACK=false, src=2, dst=4, relayedBy=2, plPktId=12}]
broadcast user after fifo deliver
broadcast user gets finally gets packets!
d 2 25

d 2 26

d 2 27

d 2 28

d 2 29

d 2 30

broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###inside perfect link scheduler send loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=8, firstMsgId=9, isACK=false, src=4, dst=3, relayedBy=4, plPktId=6}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
Immediately stopping network packet processing.
Writing output.
enter flushToDisk, outputfile: /Users/sha/Desktop/EPFL/2022-2023fall/distributed-algorithms/CS451-2022-project/example/output/stress/proc04.output
