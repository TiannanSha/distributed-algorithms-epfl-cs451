My PID: 37992

From a new terminal type `kill -SIGINT 37992` or `kill -SIGTERM 37992` to stop processing packets

My ID: 2

List of resolved hosts is:
==========================
1
Human-readable IP: 127.0.0.1
Human-readable Port: 11001

2
Human-readable IP: 127.0.0.1
Human-readable Port: 11002

3
Human-readable IP: 127.0.0.1
Human-readable Port: 11003


Path to output:
===============
/Users/sha/Desktop/EPFL/2022-2023fall/distributed-algorithms/CS451-2022-project/example/output/stress/proc02.output

Path to config:
===============
../example/output/stress/config

Doing some initialization

broadcastAllMsgs()

broadcast Msgs()

$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[]
$$$submitloop before sendQueue.take()
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=2}
sendQueue: []
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}]
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[1], 3=[]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=1, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
append to log with entry: b 1

append to log with entry: b 2

append to log with entry: b 3

append to log with entry: b 4

append to log with entry: b 5

append to log with entry: b 6

append to log with entry: b 7

append to log with entry: b 8

packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}]
append to log with entry: b 9

append to log with entry: b 10

broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=1}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 1, packet.pktId = 1
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=1}
rebroadcast pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=2, relayedBy=1}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=1}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=1}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=3}
info: creating ACK packet
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}]
$$$submitloop before sendQueue.take()
fairloss link send ACK to host /127.0.0.1port 11003
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}
packet.src = 3, packet.pktId = 1
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[2], 3=[]}}
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=3}
rebroadcast pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=3}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=3, relayedBy=3}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=3, relayedBy=3}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=1}
info: creating ACK packet
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 1, packet.pktId = 2
fairloss link after send ACK
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=1}
rebroadcast pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=2, relayedBy=1}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[3], 3=[]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=1, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=1}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=2, numMsgs=0, firstMsgId=-1, isACK=true, src=2, dst=1, relayedBy=1}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}]
pktRecv in perfect link deliverPacket{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=2, relayedBy=3}
$$$submitloop before sendQueue.take()
info: creating ACK packet
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
fairloss link send ACK to host /127.0.0.1port 11003
packet.src = 3, packet.pktId = 2
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[], 2=[4], 3=[]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
$$$submitloop  after submit an task
fairloss link after send ACK
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
beb deliver after beb deliver Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=2, relayedBy=3}
send to addr:/127.0.0.1, port:11003
rebroadcast pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=2, relayedBy=3}
packet.dst:1
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}]
packet.dst:3
in send, sendQueue add packet:Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}
sendQueue: [Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
fair loss link deliver() after socket.receive()
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=2, relayedBy=1}
info: creating ACK packet
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
send to addr:/127.0.0.1, port:11003
fairloss link send ACK to host /127.0.0.1port 11001
packet.src = 3, packet.pktId = 1
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}
fairloss link after send ACK
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[5], 2=[4], 3=[]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=1, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
perfectlink after flink deliver()
pktRecv in perfect link deliverPacket{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=1}
perfectlink deliver ACK
ACK:Packet{dataLen=32, pktId=1, numMsgs=0, firstMsgId=-1, isACK=true, src=1, dst=1, relayedBy=1}
beb deliver after beb deliver null
in urb deliver packet is null
fifo deliver after urb deliver, pkts from urb: []
broadcast user after fifo deliver
broadcast user receivingLoop after perfectLink deliver
broadcast user receivingLoop
in urb deliver()
in beb deliver
perfectlink deliver()
before socket receive, which blocks if no packet is received
$$$submitloop in sendingLoop
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
send to addr:/127.0.0.1, port:11003
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[6], 2=[4], 3=[]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
$$$submitloop before sendQueue.take()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[6], 2=[4], 3=[7]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=1, relayedBy=2}
$$$submitloop  after submit an task
$$$submitloop in sendingLoop
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
$$$submitloop before sendQueue.take()
send to addr:/127.0.0.1, port:11003
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[6], 2=[4], 3=[7, 8]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=3, dst=3, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
$$$submitloop in sendingLoop
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
send to addr:/127.0.0.1, port:11003
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[6, 9], 2=[4], 3=[7, 8]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=1, relayedBy=2}
$$$submitloop  after submit an task
$$$submitloop in sendingLoop
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}
send to addr:/127.0.0.1, port:11003
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[6, 9, 10], 2=[4], 3=[7, 8]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=1, dst=3, relayedBy=2}
$$$submitloop  after submit an task
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}, Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
send to addr:/127.0.0.1, port:11003
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[6, 9, 10], 2=[4], 3=[7, 8, 11]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=1, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
$$$submitloop  sendQueue:[Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}]
$$$submitloop before sendQueue.take()
$$$submitloop  after sendQueue.take() pkt: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}
###in perfect link submitasendtask() submitting sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}
###in perfect link submitasendtask() pendingPktIdsNodeIDToPktIDs{nodeIdToPktIds={1=[6, 9, 10], 2=[4], 3=[7, 8, 11, 12]}}
after submit send task of sending packet: Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=3, dst=3, relayedBy=2}
$$$submitloop  after submit an task
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
$$$submitloop in sendingLoop
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
$$$submitloop  sendQueue:[]
send to addr:/127.0.0.1, port:11003
$$$submitloop before sendQueue.take()
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=1, numMsgs=8, firstMsgId=1, isACK=false, src=1, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
###inside perfect link thread pool send() loop, pkt = Packet{dataLen=32, pktId=2, numMsgs=2, firstMsgId=9, isACK=false, src=2, dst=3, relayedBy=2}
in fairloss link send()
send to addr:/127.0.0.1, port:11003
Immediately stopping network packet processing.
Writing output.
enter flushToDisk, outputfile: /Users/sha/Desktop/EPFL/2022-2023fall/distributed-algorithms/CS451-2022-project/example/output/stress/proc02.output
