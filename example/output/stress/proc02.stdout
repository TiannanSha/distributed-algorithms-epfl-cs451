My PID: 6538

From a new terminal type `kill -SIGINT 6538` or `kill -SIGTERM 6538` to stop processing packets

My ID: 2

List of resolved hosts is:
==========================
1
Human-readable IP: 127.0.0.1
Human-readable Port: 11001

2
Human-readable IP: 127.0.0.1
Human-readable Port: 11002

3
Human-readable IP: 127.0.0.1
Human-readable Port: 11003


Path to output:
===============
/Users/sha/Desktop/EPFL/2022-2023fall/distributed-algorithms/CS451-2022-project/example/output/stress/proc02.output

Path to config:
===============
../example/output/stress/config

Doing some initialization

cs451.links.LinkUser@66a29884
Broadcasting and delivering messages...

sendAllMsgs()

sendMsgs()

in sendingLoop
packet.dst1
packet.dst1
packet.dst1
in perfect link submitasendtask()
packet.dst1
packet.dst1
packet.dst1
packet.dst1
packet.dst1
packet.dst1
packet.dst1
packet.dst1
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
append to log with entry: b 1

append to log with entry: b 2

append to log with entry: b 3

append to log with entry: b 4

append to log with entry: b 5

append to log with entry: b 6

append to log with entry: b 7

append to log with entry: b 8

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 9

append to log with entry: b 10

in perfect link send() loop, pktId = 0
in fairloss link send()
append to log with entry: b 11

append to log with entry: b 12

append to log with entry: b 13

append to log with entry: b 14

append to log with entry: b 15

append to log with entry: b 16

in sendingLoop
in perfect link submitasendtask()
in perfect link send() loop, pktId = 1
in fairloss link send()
append to log with entry: b 17

append to log with entry: b 18

append to log with entry: b 19

append to log with entry: b 20

append to log with entry: b 21

append to log with entry: b 22

append to log with entry: b 23

append to log with entry: b 24

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 25

append to log with entry: b 26

append to log with entry: b 27

append to log with entry: b 28

append to log with entry: b 29

append to log with entry: b 30

append to log with entry: b 31

append to log with entry: b 32

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 33

in perfect link send() loop, pktId = 2
in fairloss link send()
append to log with entry: b 34

append to log with entry: b 35

append to log with entry: b 36

append to log with entry: b 37

append to log with entry: b 38

append to log with entry: b 39

append to log with entry: b 40

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 41

append to log with entry: b 42

append to log with entry: b 43

send to addr:/127.0.0.1, port:11001
send to addr:/127.0.0.1, port:11001
append to log with entry: b 44

append to log with entry: b 45

send to addr:/127.0.0.1, port:11001
append to log with entry: b 46

append to log with entry: b 47

append to log with entry: b 48

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 49

append to log with entry: b 50

append to log with entry: b 51

append to log with entry: b 52

append to log with entry: b 53

append to log with entry: b 54

append to log with entry: b 55

append to log with entry: b 56

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 57

append to log with entry: b 58

append to log with entry: b 59

append to log with entry: b 60

append to log with entry: b 61

append to log with entry: b 62

append to log with entry: b 63

append to log with entry: b 64

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 65

append to log with entry: b 66

append to log with entry: b 67

append to log with entry: b 68

append to log with entry: b 69

append to log with entry: b 70

append to log with entry: b 71

append to log with entry: b 72

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 73

append to log with entry: b 74

append to log with entry: b 75

append to log with entry: b 76

append to log with entry: b 77

append to log with entry: b 78

append to log with entry: b 79

append to log with entry: b 80

in sendingLoop
in perfect link submitasendtask()
append to log with entry: b 81

append to log with entry: b 82

append to log with entry: b 83

append to log with entry: b 84

append to log with entry: b 85

append to log with entry: b 86

append to log with entry: b 87

append to log with entry: b 88

in sendingLoop
in perfect link send() loop, pktId = 2
in fairloss link send()
in perfect link send() loop, pktId = 1
send to addr:/127.0.0.1, port:11001
in perfect link send() loop, pktId = 0
in fairloss link send()
in fairloss link send()
send to addr:/127.0.0.1, port:11001
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId2,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId0,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId1,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId2,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId0,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId1,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
in perfect link send() loop, pktId = 3
in fairloss link send()
send to addr:/127.0.0.1, port:11001
in perfect link send() loop, pktId = 4
in fairloss link send()
fair loss link deliver() after socket.receive()
send to addr:/127.0.0.1, port:11001
pkt.src = 1, pkt.pktId3,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
in perfect link send() loop, pktId = 5
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId4,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId5,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
in perfect link send() loop, pktId = 6
in fairloss link send()
send to addr:/127.0.0.1, port:11001
in perfect link send() loop, pktId = 7
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId6,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId7,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
in perfect link send() loop, pktId = 8
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId8,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
in perfect link send() loop, pktId = 9
in fairloss link send()
send to addr:/127.0.0.1, port:11001
in perfect link send() loop, pktId = 10
in fairloss link send()
send to addr:/127.0.0.1, port:11001
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId9,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
fair loss link deliver() after socket.receive()
pkt.src = 1, pkt.pktId10,pkt.isACK = true
perfectlink deliver ACK
link user receivingLoop after perfectLink deliver
link user receivingLoop
perfectlink deliver()
before socket receive, which blocks if no packet is received
Immediately stopping network packet processing.
Writing output.
enter flushToDisk, outputfile: /Users/sha/Desktop/EPFL/2022-2023fall/distributed-algorithms/CS451-2022-project/example/output/stress/proc02.output
